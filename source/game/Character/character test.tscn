[gd_scene load_steps=16 format=3 uid="uid://cych0u7ljeb2n"]

[ext_resource type="Environment" uid="uid://cms3emih1j6kt" path="res://source/game/world.tres" id="1_2e1t2"]
[ext_resource type="PackedScene" uid="uid://olxebp8opmt8" path="res://source/game/Character/character.tscn" id="1_os8ji"]
[ext_resource type="PackedScene" uid="uid://daq2ktcnqj41c" path="res://assets/model/model_scenes/Metro_PSX_split/chair.tscn" id="4_b6cy3"]
[ext_resource type="Texture2D" uid="uid://8qoflni6nisf" path="res://assets/model/models/textures/Metro_PSX/Chair.png" id="5_jf753"]
[ext_resource type="PackedScene" uid="uid://blk6m1hhnnjq8" path="res://source/portal renderer/render_viewport.tscn" id="6_0sa0k"]
[ext_resource type="PackedScene" uid="uid://bo16sqwgdwk6o" path="res://source/game/levels/Props/door_metal.tscn" id="8_e5tia"]
[ext_resource type="PackedScene" uid="uid://dy6kocd8kf1dp" path="res://assets/model/model_scenes/Metro_PSX_split/st_02.tscn" id="8_yhrcq"]

[sub_resource type="PlaneMesh" id="PlaneMesh_7slvv"]
size = Vector2(30, 30)

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_g7fi7"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_qjn7n"]

[sub_resource type="TorusMesh" id="TorusMesh_kvde8"]

[sub_resource type="Shader" id="Shader_yy5kp"]
code = "shader_type spatial;
render_mode blend_mix,
	cull_disabled,
	depth_prepass_alpha,
	shadows_disabled,
	specular_disabled,
	vertex_lighting;

uniform bool affine_mapping = false;
uniform sampler2D albedo : source_color, filter_nearest;
uniform float alpha_scissor : hint_range(0, 1) = 0.5;
uniform float jitter: hint_range(0, 1) = 0.25;
uniform ivec2 resolution = ivec2(320, 240);

vec4 snap_to_position(vec4 base_position)
{
	vec4 snapped_position = base_position;
	snapped_position.xyz = base_position.xyz / base_position.w;

	vec2 snap_resulotion = floor(vec2(resolution) * (1.0 - jitter));
	snapped_position.x = floor(snap_resulotion.x * snapped_position.x) / snap_resulotion.x;
	snapped_position.y = floor(snap_resulotion.y * snapped_position.y) / snap_resulotion.y;

	snapped_position.xyz *= base_position.w;
	return snapped_position;
}

void vertex()
{
	vec4 snapped_position = snap_to_position(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	if (affine_mapping)
	{
		POSITION = snapped_position;
		POSITION /= abs(POSITION.w);
	}
	else
	{
		POSITION = snapped_position;
	}
}

void fragment()
{
	vec4 color_base = COLOR;
	vec4 texture_color = texture(albedo, UV);

	ALBEDO = (color_base * texture_color).rgb;
	ALPHA = texture_color.a * color_base.a;
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0sa0k"]
render_priority = 0
shader = SubResource("Shader_yy5kp")
shader_parameter/affine_mapping = false
shader_parameter/albedo = ExtResource("5_jf753")
shader_parameter/alpha_scissor = 0.5
shader_parameter/jitter = 0.25
shader_parameter/resolution = Vector2i(320, 240)

[sub_resource type="SphereMesh" id="SphereMesh_2e1t2"]

[sub_resource type="SphereShape3D" id="SphereShape3D_yhrcq"]

[node name="CharacterTest" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("1_2e1t2")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866023, -0.433016, 0.250001, 0, 0.499998, 0.866027, -0.500003, 0.749999, -0.43301, 0, 0, 0)
shadow_enabled = true

[node name="CharacterBody3D" parent="." instance=ExtResource("1_os8ji")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 9.04483)

[node name="Floor" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_7slvv")

[node name="StaticBody3D" type="StaticBody3D" parent="Floor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor/StaticBody3D"]
shape = SubResource("WorldBoundaryShape3D_g7fi7")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1.77519, -1.12609, -5.79369, -2.4358, -4.10672, 1.18432, -7.96744, 1.00461, -1.65294, 0, 1.89294, -7.00298)
mesh = SubResource("CapsuleMesh_qjn7n")

[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
transform = Transform3D(-6.49298, 1.00737, -0.503834, -3.34719, -2.10078, 0.596512, -0.596142, 0.823393, 2.13833, -0.728171, 3.95255, 0.454929)
mesh = SubResource("TorusMesh_kvde8")

[node name="Chair" parent="." instance=ExtResource("4_b6cy3")]
transform = Transform3D(113.949, 0, 0, 0, -1.35838e-05, 113.949, 0, -113.949, -1.35838e-05, -1.98928, 0.526775, 4.90891)
material_override = SubResource("ShaderMaterial_0sa0k")

[node name="Render Texture" parent="." node_paths=PackedStringArray("camera") instance=ExtResource("6_0sa0k")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.00132418, -0.0407639, 0.0042634)
world = ExtResource("8_yhrcq")
camera = NodePath("../CharacterBody3D/Camera3D")

[node name="Node3D" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.09313, 11.6362)

[node name="MeshInstance3D" type="MeshInstance3D" parent="Node3D"]
mesh = SubResource("SphereMesh_2e1t2")

[node name="Area3D" type="Area3D" parent="Node3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Node3D/Area3D"]
shape = SubResource("SphereShape3D_yhrcq")

[node name="Door2" parent="." instance=ExtResource("8_e5tia")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.2, 1, 8)

[editable path="CharacterBody3D"]
